@{
    ViewData["Title"] = "Crypto Price Tracker";
}

<!-- ========= Title & Controls ========= -->
<h1 class="title">Crypto Price Tracker</h1>

<button id="updateBtn">⟳ Update Prices</button>
<span id="statusMsg"></span>

<!-- ========= Prices Table ========= -->
<table id="pricesTable">
    <thead>
        <tr>
            <th>Icon</th>
            <th>Name</th>
            <th>Symbol</th>
            <th>Price&nbsp;(USD)</th>
            <th>Last&nbsp;Updated</th>
            <th>Trend</th>
        </tr>
    </thead>
    <tbody><!-- rows inserted via JS --></tbody>
</table>

<!-- ========= Styles ========= -->
<link rel="stylesheet" href="~/css/site.css" />
<style>
    /* lightweight spinner & fade-in */
    .spin          { width:16px;height:16px;border:3px solid #ddd;border-top:3px solid #14b8a6;border-radius:50%;display:inline-block;animation:spin 1s linear infinite;vertical-align:middle }
    @@keyframes spin { to { transform:rotate(360deg) } }

    tr.fade-in     { animation:fade .4s ease-in-out }
    @@keyframes fade{ from{opacity:0} to{opacity:1} }
</style>

<!-- ========= Date/Time helper ========= -->
<script src="https://cdn.jsdelivr.net/npm/luxon@3/build/global/luxon.min.js"></script>

<!-- ========= Behaviour ========= -->
<script>
(() => {

  const tbody      = document.querySelector("#pricesTable tbody");
  const btnUpdate  = document.getElementById("updateBtn");
  const statusSpan = document.getElementById("statusMsg");

  /* ---------- Helpers ---------- */
  const toLocal = utc =>
    luxon.DateTime.fromISO(utc, { zone: "utc" })
                  .setZone(luxon.DateTime.local().zoneName)
                  .toLocaleString(luxon.DateTime.DATETIME_MED);

  const setStatus = html => { statusSpan.innerHTML = html; };

  /* ---------- Render ---------- */
  async function loadTable() {
    tbody.innerHTML = "";
    const res  = await fetch("/api/crypto/latest-prices");
    const list = await res.json();

    list.forEach(r => {
      const tr = document.createElement("tr");
      tr.innerHTML = `
        <td>${r.iconUrl ? `<img src="${r.iconUrl}" width="24"/>` : r.symbol}</td>
        <td>${r.name}</td>
        <td>${r.symbol}</td>
        <td>$${r.price.toLocaleString()}</td>
        <td>${toLocal(r.timestampUtc)}</td>
        <td>${r.trend}</td>`;
      tr.classList.add("fade-in");
      tbody.appendChild(tr);
    });
  }

  /* ---------- Update button ---------- */
  btnUpdate.addEventListener("click", async () => {
    btnUpdate.disabled = true;
    setStatus('<span class="spin"></span>&nbsp;Updating…');

    const res  = await fetch("/api/crypto/update-prices", { method: "POST" });
    const body = res.ok ? await res.json() : null;

    if (res.ok && (body.inserted ?? body.updatedCount ?? 0) >= 0) {
      const count = body.inserted ?? body.updatedCount;
      setStatus(`✅&nbsp;Updated&nbsp;(${count})`);
      await loadTable();
    } else {
      setStatus("❌&nbsp;Update&nbsp;failed");
    }
    btnUpdate.disabled = false;
  });

  /* ---------- First load ---------- */
  loadTable();

})();
</script>
